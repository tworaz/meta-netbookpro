diff --git a/hw/kdrive/fbdev/fbdev.c b/hw/kdrive/fbdev/fbdev.c
index 661e5b4..2c86f00 100644
--- a/hw/kdrive/fbdev/fbdev.c
+++ b/hw/kdrive/fbdev/fbdev.c
@@ -485,6 +485,7 @@ fbdevRandRSetConfig (ScreenPtr		pScreen,
     KdScreenInfo	*screen = pScreenPriv->screen;
     FbdevScrPriv	*scrpriv = screen->driver;
     Bool		wasEnabled = pScreenPriv->enabled;
+    FbdevPriv		*priv = screen->card->driver;
     FbdevScrPriv	oldscr;
     int			oldwidth;
     int			oldheight;
@@ -517,6 +518,41 @@ fbdevRandRSetConfig (ScreenPtr		pScreen,
      * Set new configuration
      */
 
+    if (newwidth != oldwidth || newheight != oldheight)
+    {
+        struct fb_var_screeninfo var;
+        int k;
+
+        k = ioctl (priv->fd, FBIOGET_VSCREENINFO, &var);
+
+        if (k < 0)
+        {
+            ErrorF("Error with framebuffer ioctl FBIOGET_VSCREENINFO: %s", strerror (errno));
+            return FALSE;
+        }
+
+        var.xres = newwidth;
+        var.yres = newheight;
+        var.activate = FB_ACTIVATE_NOW;
+
+        k = ioctl (priv->fd, FBIOPUT_VSCREENINFO, &var);
+
+        if (k >= 0)
+        {
+            if ((k=ioctl(priv->fd, FBIOGET_FSCREENINFO, &priv->fix)) < 0)
+            {
+                perror("Error with framebuffer ioctl FIOGET_FSCREENINFO");
+                close (priv->fd);
+                return FALSE;
+            }
+            if ((k=ioctl(priv->fd, FBIOGET_VSCREENINFO, &priv->var)) < 0) {
+                perror("Error  framebuffer ioctl FIOGET_VSCREENINFO");
+                close (priv->fd);
+                return FALSE;
+            }
+        }
+    }
+
     scrpriv->randr = KdAddRotation (screen->randr, randr);
 
     fbdevUnmapFramebuffer (screen);
